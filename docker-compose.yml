services:
  backend:
    build: ./backend
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=${MONGO_URI}
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
      - PORT=5001
      - JWT_SECRET=${JWT_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      # Comment out the following 4 lines to run the backend in production mode
    #   - NODE_ENV=development
    # command: npm run dev
    # volumes:
    #   - ./backend:/app

    depends_on:
      - mlservice

  mlservice:
    build: ./MLservice
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      # dockerfile: Dockerfile.dev # Comment out for production
    ports:
      - "80:80" # Production port
      # - "5173:5173" # Development port
      # Comment out the following 6 lines to run the frontend in production mode
    # environment:
    #   - NODE_ENV=development
    # volumes:
    #   - ./frontend:/app
    #   - frontend_node_modules:/app/node_modules
    # command: npm run dev -- --host

    depends_on:
      - backend

volumes:
  frontend_node_modules:
